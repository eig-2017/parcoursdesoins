finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=",")
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";")
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T)
finess[1,]
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, encoding="ISO8859-1")
finess[1,]
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, encoding="ISO8859-1",quote="")
finess[1,]
finess[2,]
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[2,]
finess[1,]
finess[1,] <- NULL
finess <- finess[-1,]
finess[1,]
finess[1,]
finess[1,5]
finess[1,23]
View(finess)
bool <- finess$V1 == "geolocalisation"
sum(bool)
voir <- subset (finess, bool)
View(voir)
geoloc <- subset (finess, bool)
geoloc[1,]
geoloc <- geoloc[,c(1:5)]
colnames(geoloc) <- c("FINESSet","X","Y","date")
table(geoloc$date)
geoloc[1,]
bool <- finess$V1 == "geolocalisation"
sum(bool)
geoloc <- subset (finess, bool)
geoloc[1,]
geoloc <- geoloc[,c(2:5)]
colnames(geoloc) <- c("FINESSet","X","Y","date")
table(geoloc$date)
table(as.character(geoloc$date))
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("FINESSet","X","Y")
finess <- subset (finess, !bool)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
length(colonnes)
length(colonnes) == ncol(finess)
bool <- length(colonnes) == ncol(finess)
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
colnames(finess) <- colonnes
colnames(geoloc) <- c("nofinesset","X","Y")
all(geoloc$nofinesset %in% finess$nofinesset)
sum(geoloc$nofinesset %in% finess$nofinesset)
table(nchar(as.character(geoloc$nofinesset)))
table(nchar(as.character(finess$nofinesset)))
View(geoloc)
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
sum(bool)
finess <- subset (finess, !bool)
geoloc <- subset (finess, bool)
geoloc[1,]
geoloc <- geoloc[,c(2:4)]
View(geoloc)
rm(list=ls())
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
sum(bool)
finess <- subset (finess, !bool)
########## Exploration du fichier FINESS téléchargé sur le site data.gouv.fr
#rm(list=ls())
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
### première ligne ??
finess <- finess[-1,]
### le fichier CSV est composé en 2 parties :
## 1) description des structures
## 2) géolocalisation du numéro FINESS établissements
bool <- finess$V1 == "geolocalisation"
sum(bool)
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
View(geoloc)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
sum(geoloc$nofinesset %in% finess$nofinesset)
all(geoloc$nofinesset %in% finess$nofinesset)
bool <- geoloc$nofinesset %in% finess$nofinesset
voir <- subset (geoloc, !bool)
View(voir)
cat (sum(!bool), " coordonnées non connues de la table finess")
cat (sum(!bool), " coordonnées non connues de la table finess dans la table geoloc")
length(unique(geoloc$nofinesset))
bool <- grepl("CHU",finess$rs)
sum(bool)
voir <- subset (finess, bool)
View(voir)
bool <- grepl("Bordeaux",finess$rs,ignore.case = T)
sum(bool)
voir <- subset (finess, bool)
View(voir)
table(finess$libcategetab)
sort(table(finess$libcategetab))
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
voir <- subset (finess, V20=="Dispensaire Antihansénien")
View(voir)
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées non connues de la table finess dans la table geoloc")
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset)))
sort(table(finess$libcategetab))
View(voir)
voir <- subset (finess, libcategetab=="Dispensaire Antihansénien")
View(voir)
rm(list=ls())
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
### première ligne ??
finess <- finess[-1,]
### le fichier CSV est composé en 2 parties :
## 1) description des structures
## 2) géolocalisation du numéro FINESS établissements
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
## geoloc :
# 3 colonnes intéressantes
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
## je recopie manuellement la colonne "Balise XML" du fichier décrivant les variables
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
#### Vérification concordance entre les 2 dataframe geoloc et finess:
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées non connues de la table finess dans la table geoloc")
# voir <- subset (geoloc, !bool)
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset)))
bool <- grepl("Bordeaux",finess$rs,ignore.case = T)
sum(bool)
voir <- subset (finess, bool)
sort(table(finess$libcategetab))
voir2 <- subset (finess, nofinesset == "330781303")
View(voir2)
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées non connues de la table finess dans la table geoloc")
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset)))
bool <- grepl("Bordeaux",finess$rs,ignore.case = T)
sum(bool)
View(geoloc)
View(finess)
colnames(finess)
colnames(geoloc)
finess[1,]
View(finess)
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","commune","dep","categetab",
"libcategetab","categagretab","libcategagretab",
"siret")
bool <- all(variables %in% colnames(finess))
colonnes <- which(colnames(finess) %in% variables)
if (!all(bool)){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
bool
variables %in% colnames(finess)
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","commune","departement","categetab",
"libcategetab","categagretab","libcategagretab",
"siret")
bool <- all(variables %in% colnames(finess))
if ((bool)){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
variables %in% colnames(finess)
if (!bool){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
length(unique(geoloc$nofinesset))
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
View(anomalies)
geoloc <- unique(geoloc)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
nrow(anomalies)
if (nrow(anomalies)!= 0){
cat("Plusieurs géolocalisations pour un même Finess Etab")
} else {
cat("Une seule géolocalisation pour chaque Finess")
}
bool <- finess$nofinesset %in% geoloc$nofinesset
all(bool)
sum(!bool)
sansGeoloc <- subset (finess, !bool)
View(sansGeoloc)
cat (nrow(sansGeoloc), " établissements non géolocalisés")
finessSelect$INSEE_COM <- paste (finessSelect$departement,finessSelect$commune,sep="")
View(finessSelect)
rm(list=ls())
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
geoloc <- unique(geoloc)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées non connues de la table finess dans la table geoloc")
cat (sum(!bool), " coordonnées de la table geoloc sans correspondance dans table finess")
finess$INSEE_COM <- paste (finess$departement,finess$commune,sep="")
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées de la table geoloc sans correspondance dans table finess")
bool <- finess$nofinesset %in% geoloc$nofinesset
all(bool)
sum(!bool)
sansGeoloc <- subset (finess, !bool)
cat (nrow(sansGeoloc), " établissements non géolocalisés")
colnames(finess)
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
if (nrow(anomalies)!= 0){
cat("Plusieurs géolocalisations pour un même Finess Etab")
} else {
cat("Une seule géolocalisation pour chaque Finess")
}
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset)))
colnames(finess)
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","categetab",
"libcategetab","categagretab","libcategagretab",
"siret","INSEE_COM")
bool <- all(variables %in% colnames(finess))
if (!bool){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
locEtab <- finessSelect
save(locEtab, file="locEtab.rdata")
table(nchar(finess$INSEE_COM))
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
geoloc <- unique(geoloc)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
finess$INSEE_COM <- paste (finess$departement,finess$commune,sep="")
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées de la table geoloc sans correspondance dans table finess")
bool <- finess$nofinesset %in% geoloc$nofinesset
sansGeoloc <- subset (finess, !bool)
cat (nrow(sansGeoloc), " établissements non géolocalisés")
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
if (nrow(anomalies)!= 0){
cat("Plusieurs géolocalisations pour un même Finess Etab")
} else {
cat("Une seule géolocalisation pour chaque Finess")
}
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset))) ### tous on bien 9 charactères
table(nchar(finess$INSEE_COM)) ## codes insee = 5 charactères
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","categetab",
"libcategetab","categagretab","libcategagretab",
"siret","INSEE_COM")
bool <- all(variables %in% colnames(finess))
if (!bool){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
View(finessSelect)
library(sp)
locEtab$X <- as.numeric(as.character(locEtab$X))
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
geoloc <- unique(geoloc)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
finess$INSEE_COM <- paste (finess$departement,finess$commune,sep="")
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées de la table geoloc sans correspondance dans table finess")
bool <- finess$nofinesset %in% geoloc$nofinesset
sansGeoloc <- subset (finess, !bool)
cat (nrow(sansGeoloc), " établissements non géolocalisés")
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
if (nrow(anomalies)!= 0){
cat("Plusieurs géolocalisations pour un même Finess Etab")
} else {
cat("Une seule géolocalisation pour chaque Finess")
}
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset))) ### tous on bien 9 charactères
table(nchar(finess$INSEE_COM)) ## codes insee = 5 charactères
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","categetab",
"libcategetab","categagretab","libcategagretab",
"siret","INSEE_COM")
bool <- all(variables %in% colnames(finess))
if (!bool){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
geoloc <- geoloc[,c(2:4)]
colnames(geoloc) <- c("nofinesset","X","Y")
geoloc <- unique(geoloc)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
bool <- length(colonnes) == ncol(finess)
if (!bool){
stop("Nombre de colonnes de la table finess différent du nombre de libellés")
}
colnames(finess) <- colonnes
finess$INSEE_COM <- paste (finess$departement,finess$commune,sep="")
bool <- geoloc$nofinesset %in% finess$nofinesset
cat (sum(!bool), " coordonnées de la table geoloc sans correspondance dans table finess")
bool <- finess$nofinesset %in% geoloc$nofinesset
sansGeoloc <- subset (finess, !bool)
cat (nrow(sansGeoloc), " établissements non géolocalisés")
tab <- table(geoloc$nofinesset)
tab <- subset (tab, tab > 1)
anomalies <- subset (geoloc, nofinesset %in% names(tab))
if (nrow(anomalies)!= 0){
cat("Plusieurs géolocalisations pour un même Finess Etab")
} else {
cat("Une seule géolocalisation pour chaque Finess")
}
length(unique(geoloc$nofinesset))
table(nchar(as.character(finess$nofinesset))) ### tous on bien 9 charactères
table(nchar(finess$INSEE_COM)) ## codes insee = 5 charactères
colnames(finess)
variables <- c("nofinesset","nofinessej","rs","categetab",
"libcategetab","categagretab","libcategagretab",
"siret","INSEE_COM")
bool <- all(variables %in% colnames(finess))
if (!bool){
stop("variable sélectionnée non connue de la table finess")
}
colonnes <- which(colnames(finess) %in% variables)
finessSelect <- finess[,colonnes]
finessSelect <- unique(finessSelect)
finessSelect <- merge (finessSelect, geoloc, by="nofinesset")
View(finessSelect)
finess <- read.table("etalab_cs1100507_stock_20170120-0449.csv",sep=";",fill=T, fileEncoding = "ISO8859-1",quote="")
finess[1,]
finess <- finess[-1,]
bool <- finess$V1 == "geolocalisation"
geoloc <- subset (finess, bool)
finess <- subset (finess, !bool)
View(finess)
colonnes <- c("structure","nofinesset","nofinessej","rs","rslongue","complrs",
"compldistrib","numvoie","typvoie","voie","compvoie","lieuditbp",
"commune","departement","libdepartement","ligneacheminement",
"telephone","telecopie","categetab","libcategetab","categagretab",
"libcategagretab","siret","codeape","codemft","libmft","codesph",
"libsph","dateouv","dateautor","datemaj","numuai")
